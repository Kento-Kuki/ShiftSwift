// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
generator client {
  provider = "prisma-client-js"
}

model Client {
  id String @id @default(uuid())
  orgId String
  name String
  address String
  phone String
  email String
  imageUrl String @db.Text

  site Site[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orgId])
}

model Site {
  id String @id @default(uuid())
  clientId String
  name String
  location String
  description String?
  requirements String[]
  client Client @relation(fields: [clientId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([clientId])
}

model Employee {
  id String @id @default(uuid())
  orgId String
  userId String
  name String
  email String
  phone String
  imageUrl String
  skills String[]

  shiftAssignments ShiftAssignment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orgId])
  @@index([userId])
}

model Shift {
  id String @id @default(uuid())
  siteId String
  date DateTime
  startTime DateTime
  endTime DateTime
  headcount Int

  shiftAssignments ShiftAssignment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([siteId])
}

model ShiftAssignment {
  id String @id @default(uuid())
  shiftId String
  employeeId String

  shift Shift @relation(fields: [shiftId], references: [id])
  employee Employee @relation(fields: [employeeId], references: [id])

  @@unique([shiftId, employeeId])
  @@index([shiftId])
  @@index([employeeId])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

